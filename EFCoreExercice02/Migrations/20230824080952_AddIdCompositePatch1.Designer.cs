// <auto-generated />
using System;
using EFCoreExercice02.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreExercice02.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230824080952_AddIdCompositePatch1")]
    partial class AddIdCompositePatch1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EFCoreExercice02.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("-- id de la reservation --");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BeginningDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("begin_date")
                        .HasComment("-- date debut de reservation --");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id")
                        .HasComment("-- id du client de la reservation --");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date")
                        .HasComment("-- date fin de reservation --");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("-- status de la reservation --");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("booking");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeginningDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 1,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        });
                });

            modelBuilder.Entity("EFCoreExercice02.Models.BookingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("-- id --");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id")
                        .HasComment("-- id de la reservation --");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id")
                        .HasComment("-- id de la chambre reservee--");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date")
                        .HasComment("-- date de mise à jour de la reservation --");

                    b.HasKey("Id");

                    b.ToTable("booking_room");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            RoomId = 1,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EFCoreExercice02.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("-- id du client --");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name")
                        .HasComment("-- prenom du client --");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name")
                        .HasComment("-- nom du client --");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel")
                        .HasComment("-- telephone du client --");

                    b.HasKey("Id");

                    b.ToTable("client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Firstname = "Toto",
                            Lastname = "Toto",
                            Tel = "0101010101"
                        });
                });

            modelBuilder.Entity("EFCoreExercice02.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("-- id de la chambre --");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BedsNumber")
                        .HasColumnType("int")
                        .HasColumnName("beds_number")
                        .HasComment("-- numero de la chambre --");

                    b.Property<decimal>("RoomRate")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("room_rate")
                        .HasComment("-- tarif de la chambre --");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("-- status de la chambre --");

                    b.HasKey("Id");

                    b.ToTable("room");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BedsNumber = 1,
                            RoomRate = 125.50m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("EFCoreExercice02.Models.Booking", b =>
                {
                    b.HasOne("EFCoreExercice02.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
